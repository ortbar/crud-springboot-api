# URL de conexión a la base de datos MySQL.
# jdbc:mysql:// -> Indica que estamos usando MySQL.
# localhost -> El servidor de base de datos está en la misma máquina (cambiar si es remoto).
# 3306 -> Puerto predeterminado de MySQL.
# crudrapido -> Nombre de la base de datos a la que conectará la aplicación.

spring.datasource.url=jdbc:mysql://localhost:3306/crudrapido

# Nombre de usuario de la base de datos. 
# Por defecto es "root" en instalaciones básicas de MySQL.
spring.datasource.username=root

# Contraseña para el usuario configurado. Dejar en blanco si el usuario no tiene contraseña.
spring.datasource.password=

# Clase del controlador JDBC para MySQL.
# Especifica cómo Spring Boot conecta con la base de datos.
# Puede omitirse porque Spring Boot suele detectarlo automáticamente si la dependencia de MySQL está incluida.

spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Muestra las consultas SQL generadas por JPA/Hibernate en la consola.
# Útil para depurar y entender las operaciones realizadas en la base de datos.

spring.jpa.show-sql=true

# Configuración de Hibernate para manejar las tablas en la base de datos.
# Valores posibles:
# - none: No realiza ninguna acción sobre las tablas.
# - validate: Verifica si el esquema existente es compatible con las entidades, pero no realiza cambios.
# - update: Ajusta las tablas para reflejar cambios en las entidades (ideal para desarrollo, no recomendado en producción).
# - create: Crea el esquema desde cero cada vez que se ejecuta la aplicación (útil en pruebas, destruye los datos).
# - create-drop: Igual que "create", pero elimina las tablas al cerrar la aplicación.
# Actualmente está configurado como "update" para desarrollo.


spring.jpa.hibernate.ddl-auto=create-drop
